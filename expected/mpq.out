--
--  Test mpq datatype
--
-- Compact output
\t
\a
--
-- mpq input and output functions
--
SELECT '0'::mpq;
0
SELECT '1'::mpq;
1
SELECT '-1'::mpq;
-1
SELECT '10'::mpq;
10
SELECT '-10'::mpq;
-10
SELECT '4294967295'::mpq;   -- limbs boundaries
4294967295
SELECT '4294967296'::mpq;
4294967296
SELECT '-4294967296'::mpq;
-4294967296
SELECT '-4294967297'::mpq;
-4294967297
SELECT '18446744073709551614'::mpq;
18446744073709551614
SELECT '18446744073709551615'::mpq;
18446744073709551615
SELECT '18446744073709551616'::mpq;
18446744073709551616
SELECT '18446744073709551617'::mpq;
18446744073709551617
SELECT '-18446744073709551615'::mpq;
-18446744073709551615
SELECT '-18446744073709551616'::mpq;
-18446744073709551616
SELECT '-18446744073709551617'::mpq;
-18446744073709551617
SELECT '-18446744073709551618'::mpq;
-18446744073709551618
SELECT '12345678901234567890123456789012345678901234567890123456789012345678901234567890'::mpq;
12345678901234567890123456789012345678901234567890123456789012345678901234567890
SELECT '1/1'::mpq;
1
SELECT '2/3'::mpq;
2/3
SELECT '640/30'::mpq;
64/3
SELECT '-640/30'::mpq;
-64/3
SELECT '18446744073709551616/18446744073709551616'::mpq;
1
SELECT '12345678901234567890123456789012345678901234567890123456789012345678901234567890/'
       '88888888888888888888888888888888888888888888888888888888888888888888888888888888'::mpq;
617283945/4444444444
SELECT '1/0'::mpq;
ERROR:  denominator can't be zero
LINE 1: SELECT '1/0'::mpq;
               ^
--
-- mpq cast
--
SELECT 0::smallint::mpq, (-32768)::smallint::mpq, 32767::smallint::mpq;
0|-32768|32767
SELECT 0::integer::mpq, (-2147483648)::integer::mpq, 2147483647::integer::mpq;
0|-2147483648|2147483647
SELECT 0::bigint::mpq, (-9223372036854775808)::bigint::mpq, 9223372036854775807::bigint::mpq;
0|-9223372036854775808|9223372036854775807
SELECT 0::numeric::mpq, (-12345678901234567890)::numeric::mpq, 12345678901234567890::numeric::mpq;
0|-12345678901234567890|12345678901234567890
SELECT 0::mpz::mpq, (-12345678901234567890)::mpz::mpq, 12345678901234567890::mpz::mpq;
0|-12345678901234567890|12345678901234567890
-- TODO - together with conversion from mpf
-- SELECT 0.0::float4::mpq, (-12345.25)::float4::mpq, 12345.25::float4::mpq;
-- SELECT 0.0::float8::mpq, (-123456789012.25)::float8::mpq, 123456789012.25::float8::mpq;
SELECT 0.0::numeric::mpq, (-1234567890.12345)::numeric::mpq, 1234567890.12345::numeric::mpq;
0|-24691357802469/20000|24691357802469/20000
SELECT 0::mpq, 1::mpq, (-1)::mpq;       -- automatic casts
0|1|-1
SELECT 1000000::mpq, (-1000000)::mpq;
1000000|-1000000
SELECT 1000000000::mpq, (-1000000000)::mpq;
1000000000|-1000000000
SELECT 1000000000000000::mpq, (-1000000000000000)::mpq;
1000000000000000|-1000000000000000
SELECT 1000000000000000000000000000000::mpq, (-1000000000000000000000000000000)::mpq;
1000000000000000000000000000000|-1000000000000000000000000000000
SELECT 0.0::mpq, (-1234567890.12345)::mpq, 1234567890.12345::mpq;
0|-24691357802469/20000|24691357802469/20000
-- TODO: can we live with this error?
SELECT 'NaN'::decimal::mpq;
ERROR:  invalid input syntax for mpq: "NaN"
SELECT -1::mpq;       -- these take the unary minus to work
-1
SELECT -1000000::mpq;
-1000000
SELECT -1000000000::mpq;
-1000000000
SELECT -1000000000000000::mpq;
-1000000000000000
SELECT -1000000000000000000000000000000::mpq;
-1000000000000000000000000000000
--
-- mpq arithmetic
--
SELECT -('0'::mpq), +('0'::mpq), -('1'::mpq), +('1'::mpq), -('-1'::mpq), +('-1'::mpq);
0|0|-1|1|1|-1
SELECT -('1234567890123456/7890'::mpq), +('1234567890123456/7890'::mpq);
-205761315020576/1315|205761315020576/1315
SELECT '4/5'::mpq + '6/8'::mpq;
31/20
SELECT '4/5'::mpq - '6/8'::mpq;
1/20
SELECT '4/5'::mpq * '6/8'::mpq;
3/5
SELECT '4/5'::mpq / '6/8'::mpq;
16/15
SELECT '4/5'::mpq / '0'::mpq;
ERROR:  division by zero
